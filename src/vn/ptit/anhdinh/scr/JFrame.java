package vn.ptit.anhdinh.scr;

import java.util.List;
import java.util.Map;

import javax.swing.JOptionPane;

import vn.hus.nlp.tagger.IConstants;
import vn.ptit.anhdinh.scr.model.SummaryFeature;
import vn.ptit.anhdinh.wordnet.model.Opinion;
import edu.stanford.nlp.ling.WordTag;

/**
 * 
 * @author DuyAnh
 */
public class JFrame extends javax.swing.JFrame {

	private RunApplication mRun;

	/**
	 * Creates new form JFrame
	 */
	public JFrame() {
		initComponents();
		btDownload.setEnabled(false);
		btTagger.setEnabled(true);
		btFeatureExtraction.setEnabled(false);
		btReviewExtraction.setEnabled(false);
		btAdjOpinionIdentification.setEnabled(false);
		btSummarizing.setEnabled(false);

		jTextAreaOutput.setEditable(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		txtUrl = new javax.swing.JTextField();
		btDownload = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextAreaOutput = new javax.swing.JTextArea();
		btTagger = new javax.swing.JButton();
		btFeatureExtraction = new javax.swing.JButton();
		btReviewExtraction = new javax.swing.JButton();
		btAdjOpinionIdentification = new javax.swing.JButton();
		btSummarizing = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel1.setText("HỌC VIỆN CÔNG NGHỆ BƯU CHÍNH VIỄN THÔNG");

		jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
		jLabel2.setText("KHOA CÔNG NGHỆ THÔNG TIN 1");

		jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
		jLabel3.setText("HỆ THỐNG ĐÁNH GIÁ VÀ TỔNG HỢP QUAN ĐIỂM");

		jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		jLabel4.setText("Tên ứng dụng:");

		txtUrl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		txtUrl.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtUrlActionPerformed(evt);
			}
		});

		btDownload.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btDownload.setText("Tải đánh giá");
		btDownload.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btDownloadActionPerformed(evt);
			}
		});

		jTextAreaOutput.setColumns(20);
		jTextAreaOutput.setRows(5);
		jScrollPane1.setViewportView(jTextAreaOutput);

		btTagger.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btTagger.setText("Gán nhãn");
		btTagger.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btTaggerActionPerformed(evt);
			}
		});

		btFeatureExtraction.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btFeatureExtraction.setText("Trích chọn đặc trưng");
		btFeatureExtraction.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btFeatureExtractionActionPerformed(evt);
			}
		});

		btReviewExtraction.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btReviewExtraction.setText("Trích chọn đánh giá");
		btReviewExtraction.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btReviewExtractionActionPerformed(evt);
			}
		});

		btAdjOpinionIdentification.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btAdjOpinionIdentification.setText("XĐ hướng quan điểm của từ");
		btAdjOpinionIdentification.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btAdjOpinionIdentificationActionPerformed(evt);
			}
		});

		btSummarizing.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btSummarizing.setText("Tổng hợp quan điểm");
		btSummarizing.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btSummarizingActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jLabel3).addGap(113, 113, 113)).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(246, 246, 246).addComponent(jLabel1)).addGroup(layout.createSequentialGroup().addGap(20, 20, 20).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(0, 0, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addGroup(layout.createSequentialGroup().addGap(57, 57, 57).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(btDownload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(btReviewExtraction, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(btTagger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(btAdjOpinionIdentification)).addGap(65, 65, 65).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(btSummarizing, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btFeatureExtraction))).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(285, 285, 285).addComponent(jLabel2)).addGroup(layout.createSequentialGroup().addGap(56, 56, 56).addComponent(jLabel4).addGap(18, 18, 18).addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)))).addContainerGap(73, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(10, 10, 10).addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(36, 36, 36).addComponent(jLabel3).addGap(39, 39, 39).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel4).addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(32, 32, 32).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btTagger, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btFeatureExtraction, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btAdjOpinionIdentification, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btSummarizing, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btReviewExtraction, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(23, 23, 23)));

		pack();
	}// </editor-fold>

	private void txtUrlActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void btDownloadActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void btTaggerActionPerformed(java.awt.event.ActionEvent evt) {
		jTextAreaOutput.append("Đang xử lý...");
		String appName = txtUrl.getText();
		if ("".equals(appName)) {
			JOptionPane.showMessageDialog(this, "Hãy tên của ứng dụng.");
			return;
		}

		mRun = new RunApplication(appName);
		mRun.vnTagging();
		List<List<WordTag>> reviewsTagged = mRun.getmReviewsTagged();

		jTextAreaOutput.setText("");
		for (List<WordTag> reviewTagged : reviewsTagged) {
			StringBuffer result = new StringBuffer(1024);
			for (WordTag wordTag : reviewTagged) {
				result.append(wordTag.word());
				result.append(IConstants.DELIM);
				result.append(wordTag.tag());
				result.append(" ");
			}
			jTextAreaOutput.append(result.toString().trim() + "\n");
		}

		txtUrl.setEnabled(false);
		btFeatureExtraction.setEnabled(true);
	}

	private void btFeatureExtractionActionPerformed(java.awt.event.ActionEvent evt) {
		jTextAreaOutput.setText("Đang xử lý...");
		mRun.featureExtraction();
		List<String> features = mRun.getmFeatures();

		jTextAreaOutput.setText("");
		for (String feature : features) {
			jTextAreaOutput.append(feature + "\n");
		}

		btReviewExtraction.setEnabled(true);
	}

	private void btReviewExtractionActionPerformed(java.awt.event.ActionEvent evt) {
		jTextAreaOutput.setText("Đang xử lý...");
		mRun.opinionReviewsExtraction();
		Map<List<WordTag>, String> opinionReviews = mRun.getmOpinionReviews();

		jTextAreaOutput.setText("");
		for (String opinionReview : opinionReviews.values()) {
			jTextAreaOutput.append(opinionReview + "\n");
		}

		btAdjOpinionIdentification.setEnabled(true);
	}

	private void btAdjOpinionIdentificationActionPerformed(java.awt.event.ActionEvent evt) {
		jTextAreaOutput.setText("Đang xử lý...");
		mRun.adjectiveOpinionIdentification();
		Map<String, Opinion> opinionAdjective = mRun.getmOpinionAdjectives();

		jTextAreaOutput.setText("");
		for (String adj : opinionAdjective.keySet()) {
			jTextAreaOutput.append(adj + " => " + opinionAdjective.get(adj).getmName() + "\n");
		}

		btSummarizing.setEnabled(true);
	}

	private void btSummarizingActionPerformed(java.awt.event.ActionEvent evt) {
		jTextAreaOutput.setText("Đang xử lý...");
		mRun.summarizingReviewsBaseOnFeature();
		Map<String, SummaryFeature> summary = mRun.getmSummaryFeatures();

		jTextAreaOutput.setText("");
		for (String feature : summary.keySet()) {
			jTextAreaOutput.append(feature + "\n");
			SummaryFeature summaryFeature = summary.get(feature);

			List<String> positives = summaryFeature.getmPositiveReviews();
			jTextAreaOutput.append("\tTích cực (" + positives.size() + ")\n");
			for (String positive : positives) {
				jTextAreaOutput.append("\t\t- " + positive + "\n");
			}

			List<String> negatives = summaryFeature.getmNegativeReviews();
			jTextAreaOutput.append("\tTiêu cực (" + negatives.size() + ")\n");
			for (String negative : negatives) {
				jTextAreaOutput.append("\t\t- " + negative + "\n");
			}
		}

		mRun.generateSummaryFeature();
		JOptionPane.showMessageDialog(this, "Đã lưu file JSON kết quả.");
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new JFrame().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton btAdjOpinionIdentification;
	private javax.swing.JButton btDownload;
	private javax.swing.JButton btFeatureExtraction;
	private javax.swing.JButton btReviewExtraction;
	private javax.swing.JButton btSummarizing;
	private javax.swing.JButton btTagger;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextArea jTextAreaOutput;
	private javax.swing.JTextField txtUrl;
	// End of variables declaration
}
